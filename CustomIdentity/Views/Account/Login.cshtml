@using CustomIdentity.ViewModels
@model LoginVM

@{
    ViewData["Title"] = "Login";
}
<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-3 card p-3">
        <h2 class="text-center text-info">
            Login
        </h2>
        
        <form asp-action="Login" method="post">
            <div -asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-1">
                @* <label asp-for="Username"></label> *@
                <input asp-for="Username" placeholder="Username" class="form-control mt-2"/>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            
            <div class="mb-1">
                @* <label asp-for="Password"></label> *@
                <input asp-for="Password" placeholder="Password" class="form-control mt-4"/>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            
            <div class="mb-1 form-check">
                <label class="form-check-label">
                    <input asp-for ="RememberMe" class="form-check-input "/>@Html.DisplayNameFor(a => a.RememberMe)
                </label>
            </div>
            
            <div class="row">
                <div class="col-8">
                    <a asp-action="Register" class="text-decoration-none text float-start mt-2 ">Don't have an account?</a>
                </div>
                <div class="col-4">
                    <input type="submit" value="Login" class="btn btn-primary btn-sm float-end"/>
                </div>
            </div>
        </form>
    </div>

</div>

@* @section Sripts{ *@
@*     @{ *@
@*         await Html.RenderPartialAsync("_ValidationScriptsPartial"); *@
@*     } *@
@* } *@